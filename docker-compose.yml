version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: ankane/pgvector:latest
    container_name: ai-saas-postgres
    environment:
      POSTGRES_DB: ai_saas_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-saas-network

  # Redis for caching and event storage
  redis:
    image: redis:7-alpine
    container_name: ai-saas-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-saas-network

  # Redis Commander (optional UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ai-saas-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - ai-saas-network
    profiles:
      - tools

  # pgAdmin (optional UI for PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ai-saas-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ai-saas.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - ai-saas-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  ai-saas-network:
    driver: bridge
